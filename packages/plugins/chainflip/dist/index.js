import{SwapKitError as P}from"@swapkit/helpers";var G={"ARB.ETH":"ArbEth","ARB.USDC-0XAF88D065E77C8CC2239327C5EDB3A432268E5831":"ArbUsdc","BTC.BTC":"Btc","DOT.DOT":"Dot","ETH.ETH":"Eth","ETH.FLIP-0X826180541412D574CF1336D22C0C0A287822678A":"Flip","ETH.USDC-0XA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48":"Usdc","ETH.USDT-0XDAC17F958D2EE523A2206206994597C13D831EC7":"Usdt"},w=(e)=>{const t=e.toString().toUpperCase(),n=G[t];if(!n)throw new P("chainflip_unknown_asset");return n};import{Chains as T}from"@chainflip/sdk/swap";import{AssetValue as D,SwapKitError as o,SwapKitNumber as H,wrapWithThrow as M}from"@swapkit/helpers";import{Chain as u}from"@swapkit/helpers";import{decodeAddress as L}from"@polkadot/keyring";import{isHex as q,u8aToHex as V}from"@polkadot/util";var C=[{inputs:[{internalType:"contract IKeyManager",name:"keyManager",type:"address"},{internalType:"uint256",name:"minFunding",type:"uint256"},{internalType:"uint48",name:"redemptionDelay",type:"uint48"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"communityGuardDisabled",type:"bool"}],name:"CommunityGuardDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"flip",type:"address"}],name:"FLIPSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newSupply",type:"uint256"},{indexed:!1,internalType:"uint256",name:"stateChainBlockNumber",type:"uint256"}],name:"FlipSupplyUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"address",name:"funder",type:"address"}],name:"Funded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"GovernanceWithdrawal",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldMinFunding",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newMinFunding",type:"uint256"}],name:"MinFundingChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedemptionExecuted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RedemptionExpired",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"nodeID",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!0,internalType:"address",name:"redeemAddress",type:"address"},{indexed:!1,internalType:"uint48",name:"startTime",type:"uint48"},{indexed:!1,internalType:"uint48",name:"expiryTime",type:"uint48"},{indexed:!1,internalType:"address",name:"executor",type:"address"}],name:"RedemptionRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"suspended",type:"bool"}],name:"Suspended",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"keyManager",type:"address"}],name:"UpdatedKeyManager",type:"event"},{inputs:[],name:"REDEMPTION_DELAY",outputs:[{internalType:"uint48",name:"",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[],name:"disableCommunityGuard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableCommunityGuard",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"}],name:"executeRedemption",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"fundStateChainAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCommunityGuardDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCommunityKey",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFLIP",outputs:[{internalType:"contract IFLIP",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getKeyManager",outputs:[{internalType:"contract IKeyManager",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastSupplyUpdateBlockNumber",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumFunding",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"nodeID",type:"bytes32"}],name:"getPendingRedemption",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"redeemAddress",type:"address"},{internalType:"uint48",name:"startTime",type:"uint48"},{internalType:"uint48",name:"expiryTime",type:"uint48"},{internalType:"address",name:"executor",type:"address"}],internalType:"struct IStateChainGateway.Redemption",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSuspendedState",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"govUpdateFlipIssuer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"govWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"bytes32",name:"nodeID",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"redeemAddress",type:"address"},{internalType:"uint48",name:"expiryTime",type:"uint48"},{internalType:"address",name:"executor",type:"address"}],name:"registerRedemption",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"resume",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFLIP",name:"flip",type:"address"}],name:"setFlip",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newMinFunding",type:"uint256"}],name:"setMinFunding",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"suspend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"address",name:"newIssuer",type:"address"},{internalType:"bool",name:"omitChecks",type:"bool"}],name:"updateFlipIssuer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"uint256",name:"newTotalSupply",type:"uint256"},{internalType:"uint256",name:"stateChainBlockNumber",type:"uint256"}],name:"updateFlipSupply",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"sig",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"address",name:"kTimesGAddress",type:"address"}],internalType:"struct IShared.SigData",name:"sigData",type:"tuple"},{internalType:"contract IKeyManager",name:"keyManager",type:"address"},{internalType:"bool",name:"omitChecks",type:"bool"}],name:"updateKeyManager",outputs:[],stateMutability:"nonpayable",type:"function"}];var N=new Map([[u.Arbitrum,T.Arbitrum],[u.Bitcoin,T.Bitcoin],[u.Ethereum,T.Ethereum],[u.Polkadot,T.Polkadot]]),K=(e)=>(t)=>{const n=e.api.tx.swapping?.registerAsBroker?.(t);if(!n)throw new o("chainflip_broker_register");return e.signAndBroadcast(n)},O=(e)=>async({route:t,sellAsset:n,buyAsset:a,recipient:i,brokerCommissionBPS:r=0,ccmMetadata:y,maxBoostFeeBps:m})=>{const s=n||t&&D.from({asset:t.sellAsset}),p=a||t&&D.from({asset:t.buyAsset}),d=i||t?.destinationAddress;if(!(s&&p&&d))throw new o("chainflip_broker_invalid_params");const l=a?.chain===u.Polkadot||p.chain===u.Polkadot,c=y??null,f=m??0,h=M(()=>{return l?e.encodeAddress(e.decodeAddress(d),"hex"):d},"chainflip_broker_recipient_error");return new Promise((k)=>{const A=e.api.tx.swapping?.requestSwapDepositAddress?.(w(s),w(p),{[p.chain.toLowerCase()]:h},H.fromBigInt(BigInt(r)).getBaseValue("number"),c,f);if(!A)throw new o("chainflip_broker_tx_error");e.signAndBroadcast(A,async(g)=>{if(!g.status?.isFinalized)return;const x=g.events.find((E)=>E.event.method==="SwapDepositAddressReady");if(!x)throw new o("chainflip_channel_error","Could not find 'SwapDepositAddressReady' event");const{event:{data:{depositAddress:F,sourceChainExpiryBlock:R,destinationAddress:S,channelId:I}}}=x.toHuman(),_=g.status?.toJSON?.(),B=`${(await e.api.rpc.chain.getHeader(_?.finalized)).number}-${N.get(s.chain)}-${I.replaceAll(",","")}`;k({brokerCommissionBPS:r,buyAsset:p,depositAddress:Object.values(F)[0],depositChannelId:B,recipient:Object.values(S)[0],sellAsset:s,srcChainExpiryBlock:Number(R.replaceAll(",",""))})})})},W=(e)=>({feeAsset:t,recipient:n})=>{const a=t.chain===u.Polkadot,i=M(()=>{return a?e.encodeAddress(e.decodeAddress(n),"hex"):n},"chainflip_broker_recipient_error");return new Promise((r)=>{const y=e.api.tx?.swapping?.withdraw?.(t.ticker.toLowerCase(),{[t.chain.toLowerCase()]:i});if(!y)throw new o("chainflip_broker_withdraw");e.signAndBroadcast(y,async(m)=>{if(!m.status?.isFinalized)return;const s=m.events.find((h)=>h.event.method==="WithdrawalRequested");if(!s)throw new o("chainflip_channel_error","Could not find 'WithdrawalRequested' event");const{event:{data:{egressId:p,egressAsset:d,egressAmount:l,egressFee:c,destinationAddress:f}}}=s.toHuman();r({egressId:p,egressAsset:d,egressAmount:l,egressFee:c,destinationAddress:f})})})},z=(e)=>({evmToolbox:t,stateChainAccount:n,amount:a})=>{if(a.symbol!=="FLIP")throw new o("chainflip_broker_fund_only_flip_supported");if(!e.validateAddress(n))throw new o("chainflip_broker_fund_invalid_address");const i=q(n)?n:V(L(n));return t.call({abi:C,contractAddress:"0x6995ab7c4d7f4b03f467cf4c8e920427d9621dbd",funcName:"fundStateChainAccount",funcParams:[i,a]})},re=(e)=>({registerAsBroker:K(e),requestSwapDepositAddress:O(e),fundStateChainAccount:z(e),withdrawFee:W(e)});import{AssetValue as v,ProviderName as U,SwapKitError as b}from"@swapkit/helpers";async function X({buyAsset:e,sellAsset:t,recipient:n,brokerEndpoint:a}){try{return await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({buyAsset:e.toString(),sellAsset:t.toString(),destinationAddress:n})}).then((r)=>r.json())}catch(i){throw new b("chainflip_channel_error",i)}}function $({getWallet:e,config:{chainflipBrokerUrl:t}}){async function n(a){if(!(a?.route?.buyAsset&&t))throw new b("core_swap_invalid_params",{...a,chainflipBrokerUrl:t});const{route:{buyAsset:i,sellAsset:r,sellAmount:y,destinationAddress:m}}=a;if(!(r&&i))throw new b("core_swap_asset_not_recognized");const s=await v.from({asyncTokenLookup:!0,asset:r}),p=e(s.chain);if(!p)throw new b("core_wallet_connection_not_found");const d=await v.from({asyncTokenLookup:!0,asset:i}),l=s.set(y),{depositAddress:c}=await X({brokerEndpoint:t,buyAsset:d,recipient:m,sellAsset:s});return await p.transfer({assetValue:l,from:p.address,recipient:c})}return{swap:n,supportedSwapkitProviders:[U.CHAINFLIP]}}var j={chainflip:{plugin:$}},ue=j;export{w as toCFTicker,X as confirmSwap,G as cfTickers,ue as ChainflipProvider,j as ChainflipPlugin,re as ChainflipBroker};

//# debugId=5D5F96FDA1AC091064756E2164756E21
