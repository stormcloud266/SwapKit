var m=((t)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(t,{get:(e,o)=>(typeof require!=="undefined"?require:e)[o]}):t)(function(t){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});import{Chain as y,WalletOption as g,setRequestClientConfig as _}from"@swapkit/helpers";import{Chain as f,SwapKitError as l,WalletOption as w}from"@swapkit/helpers";import{decodeAddress as P,encodeAddress as u}from"@polkadot/util-crypto";var A=(t,e)=>{const o=P(t);return u(o,e)},p=async({chain:t})=>{switch(t){case f.Polkadot:{const{getToolboxByChain:e}=await import("@swapkit/toolbox-substrate"),s=await window?.injectedWeb3?.["polkadot-js"]?.enable?.("polkadot-js");if(!s)throw new l({errorKey:"wallet_polkadot_not_found",info:{chain:t}});const d=await e(t,{signer:s.signer}),n=await s.accounts.get();if(!n[0]?.address)throw new l({errorKey:"wallet_missing_params",info:{wallet:w.POLKADOT_JS,accounts:n,address:n[0]?.address}});const r=n[0].address,i=A(r,0);return{walletMethods:d,address:i}}default:throw new l({errorKey:"wallet_chain_not_supported",info:{chain:t,wallet:w.POLKADOT_JS}})}};function x({addChain:t,config:{thorswapApiKey:e,covalentApiKey:o,ethplorerApiKey:a}}){return async function s(d){_({apiKey:e});const n=d.map(async(r)=>{const{address:c,walletMethods:i}=await p({chain:r,covalentApiKey:o,ethplorerApiKey:a});t({...i,address:c,chain:r,balance:[],walletType:g.POLKADOT_JS})});return await Promise.all(n),!0}}var T=[y.Polkadot],k={connectPolkadotJs:x};export{k as polkadotWallet};

//# debugId=1428EA9C522784E664756E2164756E21
